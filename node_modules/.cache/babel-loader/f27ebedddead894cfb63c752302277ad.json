{"ast":null,"code":"const api = new Api({\n  address: 'https://mesto.nomoreparties.co/v1/cohort-19',\n  token: 'd0d17317-fe5c-4341-9c10-713100a37209'\n});\n\nclass Api {\n  constructor({\n    address,\n    token\n  }) {\n    this._address = address;\n    this._token = token;\n  }\n\n  getUserData() {\n    return fetch(`${this._address}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  _returnServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n\n  uploadUserAvatar(link) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  getCardLike(id) {\n    return fetch(`${this._address}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  remoteCardLike(id) {\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  setCardLikes(id) {\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    }).then(result => result.ok ? result.json() : Promise.reject(`Ошибка ${result.status}`));\n  }\n\n  editProfile(data) {\n    return fetch(`${this._address}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data['profile-name'],\n        about: data['profile-profession']\n      })\n    }).then(res => this._returnServerResponse(res));\n  }\n\n  createCard(data) {\n    return fetch(`${this._address}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._returnServerResponse(res));\n  }\n\n}\n\nexport default api;","map":{"version":3,"sources":["/Users/sxep/Documents/dev/mesto-react/src/utils/api.js"],"names":["api","Api","address","token","constructor","_address","_token","getUserData","fetch","headers","authorization","then","res","_returnServerResponse","ok","json","Promise","reject","status","uploadUserAvatar","link","method","body","JSON","stringify","avatar","getInitialCards","deleteCard","id","getCardLike","remoteCardLike","setCardLikes","result","editProfile","data","name","about","createCard"],"mappings":"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","sourcesContent":["const api = new Api({\n  address: 'https://mesto.nomoreparties.co/v1/cohort-19',\n  token: 'd0d17317-fe5c-4341-9c10-713100a37209'\n});\n\nclass Api {\n  constructor({address, token}) {\n  this._address = address; \n  this._token = token; \n  }\n\n  getUserData() {\n      return fetch(`${this._address}/users/me`, {\n        headers: {\n          authorization: this._token\n        }\n      })\n      .then((res) => this._returnServerResponse(res))\n  }\n\n  _returnServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\n  }\n\n  uploadUserAvatar(link) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n          avatar: link,\n      })\n    })\n    .then((res) => this._returnServerResponse(res))\n}\n\n\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then((res) => this._returnServerResponse(res))\n  }\n\n  deleteCard (id) {\n        return fetch(`${this._address}/cards/${id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then((res) => this._returnServerResponse(res))\n  }\n\n  getCardLike(id){\n    return fetch(`${this._address}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then((res) => this._returnServerResponse(res))\n  }\n\n  remoteCardLike(id){\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: {\n          authorization: this._token,\n      }\n  })\n      .then((res) => this._returnServerResponse(res))\n  }\n\n  setCardLikes(id) {\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n    }\n  })\n      .then(result => result.ok ? result.json() : Promise.reject(`Ошибка ${result.status}`))\n  }\n\n  editProfile(data) {\n    return fetch(`${this._address}/users/me`, {\n        method: 'PATCH',\n        headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            name: data['profile-name'],\n            about: data['profile-profession']\n        })\n    })\n      .then((res) => this._returnServerResponse(res))\n  }\n\n  createCard(data) {\n    return fetch(`${this._address}/cards`, {\n        method: 'POST',\n        headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            name: data.name,\n            link: data.link\n        })\n    })\n    .then((res) => this._returnServerResponse(res))\n  }\n\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}