{"ast":null,"code":"var _jsxFileName = \"/Users/sxep/Documents/dev/mesto-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  console.log(props.card); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = props.card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__delete-button ${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__button-like ${isLiked ? 'button-like_yes' : ''}`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card__template\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"element\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"element__photo\",\n        src: props.card.link,\n        title: `Пользователь ${props.card.owner.name} загрузил фото и назвал ${props.card.name}`,\n        alt: `Пользователь с ником ${props.card.owner.name}, загрузил фото и назвал: ${props.card.name}`,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: cardDeleteButtonClassName,\n        onClick: props.onDeleteCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__down-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"element__name\",\n          children: props.card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element__like\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: cardLikeButtonClassName,\n            onClick: handleLikeClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"element__button-like-counter\",\n            children: props.card.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/sxep/Documents/dev/mesto-react/src/components/Card.js"],"names":["React","CurrentUserContext","Card","props","currentUser","useContext","console","log","card","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","onCardClick","handleLikeClick","onCardLike","link","name","onDeleteCard","length"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,IAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElB,QAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,kBAAjB,CAApB;AACJK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAlB,EAHsB,CAIlB;;AACA,QAAMC,KAAK,GAAGN,KAAK,CAACK,IAAN,CAAWE,KAAX,CAAiBC,GAAjB,KAAyBP,WAAW,CAACO,GAAnD,CALkB,CAOtB;;AACI,QAAMC,yBAAyB,GAC9B,0BAAyBH,KAAK,GAAG,gCAAH,GAAsC,+BAAgC,EADrG,CARkB,CAYtB;;AACA,QAAMI,OAAO,GAAGV,KAAK,CAACK,IAAN,CAAWM,KAAX,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUP,WAAW,CAACO,GAAjD,CAAhB,CAbsB,CAetB;;AACA,QAAMM,uBAAuB,GAAI,wBAAuBJ,OAAO,GAAG,iBAAH,GAAuB,EAAG,EAAzF;;AAEI,WAASK,WAAT,GAAuB;AACnBf,IAAAA,KAAK,CAACgB,WAAN,CAAkBhB,KAAK,CAACK,IAAxB;AACD;;AAED,WAASY,eAAT,GAA2B;AACzBjB,IAAAA,KAAK,CAACkB,UAAN,CAAiBlB,KAAK,CAACK,IAAvB;AACD;;AAEH,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEL,KAAK,CAACK,IAAN,CAAWc,IAAhD;AAAsD,QAAA,KAAK,EAAG,gBAAenB,KAAK,CAACK,IAAN,CAAWE,KAAX,CAAiBa,IAAK,2BAA0BpB,KAAK,CAACK,IAAN,CAAWe,IAAK,EAA7I;AAAgJ,QAAA,GAAG,EAAG,wBAAuBpB,KAAK,CAACK,IAAN,CAAWE,KAAX,CAAiBa,IAAK,6BAA4BpB,KAAK,CAACK,IAAN,CAAWe,IAAK,EAA/O;AAAkP,QAAA,OAAO,EAAEL;AAA3P;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEN,yBAAjC;AAA4D,QAAA,OAAO,EAAET,KAAK,CAACqB;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BrB,KAAK,CAACK,IAAN,CAAWe;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAEN,uBAAjC;AAA0D,YAAA,OAAO,EAAEG;AAAnE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEM;AAAM,YAAA,SAAS,EAAC,8BAAhB;AAAA,sBAAgDjB,KAAK,CAACK,IAAN,CAAWM,KAAX,CAAiBW;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzCQvB,I;;KAAAA,I;AA2CT,eAAeA,IAAf","sourcesContent":["\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card (props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\nconsole.log(props.card);\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = props.card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`\n    );\n\n// Определяем, есть ли у карточки лайк, поставленный текущим пользователем\nconst isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\nconst cardLikeButtonClassName = `element__button-like ${isLiked ? 'button-like_yes' : ''}`; \n\n    function handleClick() {\n        props.onCardClick(props.card);\n      } \n\n      function handleLikeClick() {\n        props.onCardLike(props.card);\n      } \n\n    return (\n        <div className=\"card__template\">\n            <article className=\"element\">\n                <img className=\"element__photo\" src={props.card.link} title={`Пользователь ${props.card.owner.name} загрузил фото и назвал ${props.card.name}`} alt={`Пользователь с ником ${props.card.owner.name}, загрузил фото и назвал: ${props.card.name}`} onClick={handleClick} />\n                <button type=\"button\" className={cardDeleteButtonClassName} onClick={props.onDeleteCard}></button>\n                <div className=\"element__down-part\">\n                <h2 className=\"element__name\">{props.card.name}</h2>\n                    <div className=\"element__like\">\n                        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                          <span className=\"element__button-like-counter\">{props.card.likes.length}</span> \n                    </div>\n                </div>\n            </article>\n        </div>\n        );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}