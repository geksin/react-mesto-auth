{"ast":null,"code":"var _jsxFileName = \"/Users/sxep/Documents/dev/react-mesto-auth/src/components/InfoTooltip.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CloseButtonPopup from './CloseButtonPopup.js';\nimport iconSuccessPath from \"./../images/success.svg\";\nimport iconErrorsPath from \"./../images/errors.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoTooltip(props) {\n  _s();\n\n  React.useEffect(() => {\n    function handleEscClose(evt) {\n      if (evt.key === \"Escape\") {\n        props.isClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  });\n  React.useEffect(() => {\n    function handleClickOutClose(evt) {\n      if (evt.target.classList.contains('popup')) {\n        props.isClose();\n      }\n    }\n\n    document.addEventListener('click', handleClickOutClose);\n    return () => {\n      document.removeEventListener('click', handleClickOutClose);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_tooltip ${props.isOpen ? 'popup_opened' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(CloseButtonPopup, {\n        isClose: props.isClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__info-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__info-tooltip-image\",\n          src: props.status ? iconSuccessPath : iconErrorsPath,\n          alt: \"\\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__title\",\n          children: props.status ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InfoTooltip, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/sxep/Documents/dev/react-mesto-auth/src/components/InfoTooltip.js"],"names":["React","CloseButtonPopup","InfoTooltip","props","useEffect","handleEscClose","evt","key","isClose","document","addEventListener","removeEventListener","handleClickOutClose","target","classList","contains","isOpen","status","iconSuccessPath","iconErrorsPath"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;;;;AAMA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzBH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AAClB,aAASC,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,UAAIA,GAAG,CAACC,GAAJ,KAAY,QAAhB,EAA0B;AACtBJ,QAAAA,KAAK,CAACK,OAAN;AACP;AAAC;;AACFC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAoCL,cAApC;AAEA,WAAO,MAAM;AACTI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAuCN,cAAvC;AACD,KAFH;AAGD,GAVH;AAYEL,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AACpB,aAASQ,mBAAT,CAA6BN,GAA7B,EAAkC;AAC9B,UAAIA,GAAG,CAACO,MAAJ,CAAWC,SAAX,CAAqBC,QAArB,CAA8B,OAA9B,CAAJ,EAA4C;AACxCZ,QAAAA,KAAK,CAACK,OAAN;AACP;AAAC;;AACFC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAkCE,mBAAlC;AAEA,WAAO,MAAM;AACTH,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAqCC,mBAArC;AACD,KAFH;AAGD,GAVD;AAWF,sBACI;AAAK,IAAA,SAAS,EAAG,uBAAsBT,KAAK,CAACa,MAAN,GAAe,cAAf,GAAgC,EAAG,EAA1E;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEb,KAAK,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAA2C,UAAA,GAAG,EAAEL,KAAK,CAACc,MAAN,GAAeC,eAAf,GAAiCC,cAAjF;AAAiG,UAAA,GAAG,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8BhB,KAAK,CAACc,MAAN,GAAe,gCAAf,GAAkD;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GArCQf,W;;KAAAA,W;AAuCT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport CloseButtonPopup from './CloseButtonPopup.js';\nimport iconSuccessPath from './../images/success.svg';\nimport iconErrorsPath from './../images/errors.svg';\n\n\n\nfunction InfoTooltip (props) {\n    React.useEffect(() => {\n        function handleEscClose(evt) {\n            if (evt.key === \"Escape\") {\n                props.isClose()\n        }}\n        document.addEventListener('keydown',handleEscClose);\n\n        return () => {\n            document.removeEventListener('keydown',handleEscClose);\n          };\n      },);\n\n      React.useEffect(() => {\n        function handleClickOutClose(evt) {\n            if (evt.target.classList.contains('popup')) {\n                props.isClose()\n        }}\n        document.addEventListener('click',handleClickOutClose);\n\n        return () => {\n            document.removeEventListener('click',handleClickOutClose);\n          };\n      },);\n    return (\n        <div className={`popup popup_tooltip ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container\">\n                <CloseButtonPopup isClose={props.isClose} />\n                <div className=\"popup__info-tooltip\">\n                    <img className=\"popup__info-tooltip-image\" src={props.status ? iconSuccessPath : iconErrorsPath} alt=\"статус проверки\" />\n                    <h2 className=\"popup__title\">{props.status ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"}</h2>\n\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}