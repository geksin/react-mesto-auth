{"ast":null,"code":"var _jsxFileName = \"/Users/sxep/Documents/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const [name, setName] = React.useState('Загрузка...');\n  const [description, setDescription] = React.useState('Загрузка...');\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit-profile\",\n    formName: \"form_edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: props.isOpen,\n    isClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"profile-name\",\n      name: \"profile-name\",\n      type: \"text\",\n      className: \"popup__profile-input\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: 2,\n      maxLength: 40,\n      required: true,\n      value: name,\n      onChange: handleChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"profile-name-error\",\n      className: \"popup__profile-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"profile-profession\",\n      name: \"profile-profession\",\n      type: \"text\",\n      className: \"popup__profile-input\",\n      placeholder: \"\\u0412\\u0438\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n      minLength: 2,\n      maxLength: 200,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"profile-profession-error\",\n      className: \"popup__profile-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"popup__button-save\",\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"hcmYucqbDHTRcIbzfxf2CF2YucY=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup; // Добавьте управляемые компоненты\n// Внутри EditProfilePopup добавьте стейт-переменные name и description и привяжите их к полям ввода, \n// сделав их управляемыми. Не забудьте про обработчики onChange.\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/sxep/Documents/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","name","setName","useState","description","setDescription","currentUser","useContext","handleChangeName","e","target","value","useEffect","about","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAE9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAe,aAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACO,QAAN,CAAe,aAAf,CAAtC;AAEA,QAAMG,WAAW,GAAGV,KAAK,CAACW,UAAN,CAAiBT,kBAAjB,CAApB;;AAEA,WAASU,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAEHf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACtBV,IAAAA,OAAO,CAACI,WAAW,CAACL,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACC,WAAW,CAACO,KAAb,CAAd;AACC,GAHD,EAGG,CAACP,WAAD,CAHH;AAMA,sBACI,QAAC,aAAD;AAAe,IAAA,IAAI,EAAC,cAApB;AAAmC,IAAA,QAAQ,EAAC,WAA5C;AAAwD,IAAA,KAAK,EAAC,2HAA9D;AAAsF,IAAA,MAAM,EAAEN,KAAK,CAACc,MAApG;AAA4G,IAAA,OAAO,EAAEd,KAAK,CAACe,OAA3H;AAAA,4BACA;AAAO,MAAA,EAAE,EAAC,cAAV;AAAyB,MAAA,IAAI,EAAC,cAA9B;AAA6C,MAAA,IAAI,EAAC,MAAlD;AAAyD,MAAA,SAAS,EAAC,sBAAnE;AAA0F,MAAA,WAAW,EAAC,oBAAtG;AAA4G,MAAA,SAAS,EAAE,CAAvH;AAA0H,MAAA,SAAS,EAAE,EAArI;AAAyI,MAAA,QAAQ,MAAjJ;AAAkJ,MAAA,KAAK,EAAEd,IAAzJ;AAA+J,MAAA,QAAQ,EAAEO;AAAzK;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,EAAE,EAAC,oBAAT;AAA8B,MAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAO,MAAA,EAAE,EAAC,oBAAV;AAA+B,MAAA,IAAI,EAAC,oBAApC;AAAyD,MAAA,IAAI,EAAC,MAA9D;AAAqE,MAAA,SAAS,EAAC,sBAA/E;AAAsG,MAAA,WAAW,EAAC,6FAAlH;AAAqI,MAAA,SAAS,EAAE,CAAhJ;AAAmJ,MAAA,SAAS,EAAE,GAA9J;AAAmK,MAAA,QAAQ;AAA3K;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAM,MAAA,EAAE,EAAC,0BAAT;AAAoC,MAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA1BQT,gB;;KAAAA,gB;AA4BT,eAAeA,gBAAf,C,CAGA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup (props) {\n\n    const [name, setName] = React.useState('Загрузка...');\n    const [description, setDescription] = React.useState('Загрузка...');\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n      }\n\n    React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    }, [currentUser]);\n\n\n    return (\n        <PopupWithForm name=\"edit-profile\" formName=\"form_edit\" title=\"Редактировать профиль\" isOpen={props.isOpen} isClose={props.onClose}>\n        <input id=\"profile-name\" name=\"profile-name\" type=\"text\" className=\"popup__profile-input\" placeholder=\"Имя\" minLength={2} maxLength={40} required value={name} onChange={handleChangeName}/>\n        <span id=\"profile-name-error\" className=\"popup__profile-input-error\" />\n        <input id=\"profile-profession\" name=\"profile-profession\" type=\"text\" className=\"popup__profile-input\" placeholder=\"Вид деятельности\" minLength={2} maxLength={200} required />\n        <span id=\"profile-profession-error\" className=\"popup__profile-input-error\" />\n        <button type=\"submit\" className=\"popup__button-save\">Сохранить</button>\n      </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;\n\n\n// Добавьте управляемые компоненты\n// Внутри EditProfilePopup добавьте стейт-переменные name и description и привяжите их к полям ввода, \n// сделав их управляемыми. Не забудьте про обработчики onChange."]},"metadata":{},"sourceType":"module"}